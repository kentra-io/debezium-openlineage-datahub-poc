networks:
  default:
    name: debezium_poc_network

volumes:
  kafka_data:
  postgres_data:
  debezium_data:

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: debezium_poc_db
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_replication_slots=10"
      - "-c"
      - "max_wal_senders=10"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  kafka:
    image: docker.io/bitnami/kafka:4.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CLUSTER_ID=lkorDA4qT6W1K_dk0LHvtg
      # Start Kraft Setup (Kafka as Controller - no Zookeeper)
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/tmp/logs
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,INTERNAL://kafka:9094
    healthcheck:
      interval: 3s
      retries: 10
      start_period: 5s
      test: [ "CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092" ]
      timeout: 5s
    volumes:
      - kafka_data:/bitnami
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local-docker-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9094
      DYNAMIC_CONFIG_ENABLED: 'true'
  debezium:
    image: debezium/connect:2.6
    container_name: debezium
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9094
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=dbz_configs
      - OFFSET_STORAGE_TOPIC=dbz_offsets
      - STATUS_STORAGE_TOPIC=dbz_statuses
      - KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_REST_ADVERTISED_HOST_NAME=debezium
      - CONNECT_REST_PORT=8083
      - CONNECT_PLUGIN_PATH=/kafka/connect,/debezium-connector-postgres
    depends_on:
      - kafka
      - postgres
    volumes:
      - debezium_data:/kafka/connect